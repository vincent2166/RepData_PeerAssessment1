skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
View(x)
View(x)
colSums(x[,-1])
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlcode=readLines(con)
close(con)
htmlcode
nchar(htmlcode)
ppois(10,lambda=15)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
install.package("ggplot2")
install.packages("ggplot2")
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
setwd("~/datasciencecoursera/RepData_PeerAssessment1")
data<-read.csv('activity.zip')
data<-read.csv('activity.csv')
class(data$date)
data$date<-as.date(data$date, format='%y-%m-%d')
data$date<-as.Date(data$date, format='%y-%m-%d')
View(data)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
data<-read.csv('activity.csv')
data$date<-as.Date(data$date, format="%y-%m-%d")
data<-read.csv('activity.csv')
data$date<-as.Date(data$date)
data<-read.csv('activity.csv')
data$date<-as.Date(data$date, format="%Y-%m-%d")
View(data)
data<-data[!is.na(data$steps)]
data<-data[!is.na(data$steps),]
data<-data[!is.na(data$steps),c(1,2)]
#read data and process date to date class
data<-read.csv('activity.csv')
data$date<-as.Date(data$date, format="%Y-%m-%d")
#create a clean without null
data.p1<-data[!is.na(data$steps),c(1,2)]
?tapply
tapply(data.p1$steps, data.p1$date, sum)
tapply(data.p1$steps, data.p1$date, sum, mean, median)
tapply(data.p1$steps, data.p1$date, mean)
tapply(data.p1$steps, data.p1$date, median)
tapply(data.p1$steps, data.p1$date, sum)
#read data and process date to date class
data<-read.csv('activity.csv')
data$date<-as.Date(data$date, format="%Y-%m-%d")
#create a clean without null
data.p1<-data[!is.na(data$steps),c(1,2)]
data.p1<-tapply(data.p1$steps, data.p1$date, sum)
data.p1
data.p1<-data[!is.na(data$steps),c(1,2)]
steps.sum<-tapply(data.p1$steps, data.p1$date, sum)
steps.sum
class(steps.sum)
as.dataframe(steps.sum)
?as
?as.dataframe
as.data.frame(steps.sum)
steps.sum<-as.data.frame(steps.sum)
View(steps.sum)
steps.sum$date<-rownames(steps.sum)
View(steps.sum)
library(ggplot)
library(ggplot2)
plot<-ggplot(steps.sum, aes(date, sum)) + geom_point()
print(plot)
plot + geom_point()
colnames(steps.sum)<-c('sum', 'date')
library(ggplot2)
plot<-ggplot(steps.sum, aes(date, sum))
plot + geom_point()
plot + geom_point() + geom_line()
ggplot(steps.sum, aes(date, sum)) + geom_point() + geom_line()
ggplot(steps.sum, aes(date, sum)) + geom_line()
ggplot(steps.sum, aes(date, sum)) + geom_point() + geom_line(aes(group=name))
ggplot(steps.sum, aes(date, sum)) + geom_point() + geom_line(aes(group=steps.sum))
ggplot(steps.sum, aes(date, sum)) + geom_point() + geom_line(aes(group=date))
data.p1<-data[!is.na(data$steps),c(1,2)]
steps.sum<-tapply(data.p1$steps, data.p1$date, sum)
steps.sum$date<-as.Date(rownames(steps.sum))
colnames(steps.sum)<-c('sum', 'date')
steps.sum<-as.data.frame(steps.sum)
data.p1<-data[!is.na(data$steps),c(1,2)]
steps.sum<-tapply(data.p1$steps, data.p1$date, sum)
steps.sum<-as.data.frame(steps.sum)
steps.sum$date<-as.Date(rownames(steps.sum))
colnames(steps.sum)<-c('sum', 'date')
View(steps.sum)
ggplot(steps.sum, aes(date, sum)) + geom_point() + geom_line()
ggplot(steps.sum, aes(date, sum)) + geom_histogram
ggplot(steps.sum, aes(date)) + geom_histogram
ggplot(steps.sum, aes(x=date)) + geom_histogram
source('~/.active-rstudio-document', echo=TRUE)
ggplot(steps.sum, aes(x=date)) + geom_histrogram
ggplot(steps.sum, aes(x=date)) + geom_histrogram
ggplot(steps.sum, aes(x=date)) + geom_histogram
ggplot(steps.sum, aes(x=date)) + geom_histogram()
ggplot(steps.sum, aes(x=date,sum)) + geom_histogram()
ggplot(steps.sum, aes(x=date,y=sum)) + geom_histogram()
?geom_bar
ggplot(steps.sum, aes(x=date,y=sum)) + geom_histogram(stat='identity')
mean(steps.sum$sum)
m
mean(steps.sum$sum)
median(steps.sum$sum)
count(is.na(data$steps))
length(is.na(data$steps))
length(is.na(data$steps))
is.na(data$steps)
sum(is.na(data$steps))
View(steps.sum)
data.p2<-tapply(data.p2$steps, data.p2$interval, mean)
data.p2<-data[,c(1,3)]
data.p2<-tapply(data.p2$steps, data.p2$interval, mean)
data.p1<-data[!is.na(data$steps),c(1,3)]
data.p2<-data[!is.na(data$steps),c(1,3)]
data.p2<-tapply(data.p2$steps, data.p2$interval, mean)
data.p2<-sapply(data.p2$steps, data.p2$interval, mean)
data.p2<-tapply(data.p2$steps, data.p2$interval, mean)
data.p2<-data[!is.na(data$steps),c(1,3)]
data.p2<-tapply(data.p2$steps, data.p2$interval, mean)
data.p2<-as.data.frame(data.p2)
data.p2$date<-as.Date(rownames(data.p2))
colnames(data.p2)<-c('mean','interval')
View(data.p2)
data.p2$date<-as.int(rownames(data.p2))
data.p2$date<-as.Int(rownames(data.p2))
data.p2$date<-as.integer(rownames(data.p2))
colnames(data.p2)<-c('mean','interval')
View(data.p2)
data.p3<-cbind(data,data.p2$mean)
data.p3<-merge(x=data, y=data.p2, by="interval", all.x=true)
data.p3<-merge(x=data, y=data.p2, by="interval", all.x=TRUE)
View(data.p2)
View(data.p3)
data.NA<-data[is.na(data$steps),]
data.nonNA<-data[!is,na(data$steps),]
data.nonNA<-data[!is.na(data$steps),]
data.NA<-merge(x=data.NA, y=data.p2, by='interval', all.x=TRUE)
View(data.NA)
data.NA<-data[,c(1,4,3)]
data.NA<-data.NA[,c(1,4,3)]
colnames(data.NA)<-c(interval,steps,date)
colnames(data.NA)<-c('interval','steps','date')
data.p3<-rbind(data.nonNA,data.NA)
View(data.p3)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/datasciencecoursera/RepData_PeerAssessment1")
#read data and process date to date class
data<-read.csv('activity.csv')
data$date<-as.Date(data$date, format="%Y-%m-%d")
#create a clean without null
data.p1<-data[!is.na(data$steps),c(1,2)]
steps.sum<-tapply(data.p1$steps, data.p1$date, sum)
steps.sum<-as.data.frame(steps.sum)
steps.sum$date<-as.Date(rownames(steps.sum))
colnames(steps.sum)<-c('sum', 'date')
#create graph
library(ggplot2)
ggplot(steps.sum, aes(x=date,y=sum)) + geom_histogram(stat='identity')
#calculate the mean and median
mean(steps.sum$sum)
median(steps.sum$sum)
#count the number of NAs
sum(is.na(data$steps))
#calculate the mean of each interval
data.p2<-data[!is.na(data$steps),c(1,3)]
data.p2<-tapply(data.p2$steps, data.p2$interval, mean)
data.p2<-as.data.frame(data.p2)
data.p2$date<-as.integer(rownames(data.p2))
colnames(data.p2)<-c('mean','interval')
#seperate data into NA rows and non-NA rows
data.NA<-data[is.na(data$steps),]
data.nonNA<-data[!is.na(data$steps),]
#replace steps with in NA data with the mean of each interval
data.NA<-merge(x=data.NA, y=data.p2, by='interval', all.x=TRUE)
data.NA<-data.NA[,c(1,4,3)]
colnames(data.NA)<-c('interval','steps','date')
#recombine to make a whole dataset
data.p3<-rbind(data.nonNA,data.NA)
#calculate sums of each day
library(ggplot2)
ggplot(data.p3, aes(x=date,y=steps)) + geom_histogram(stat='sum')
setwd("~/datasciencecoursera/RepData_PeerAssessment1")
#read data and process date to date class
data<-read.csv('activity.csv')
data$date<-as.Date(data$date, format="%Y-%m-%d")
#create a clean without null
data.p1<-data[!is.na(data$steps),c(1,2)]
#calculate the sum of each day
data.p1<-tapply(data.p1$steps, data.p1$date, sum)
data.p1<-as.data.frame(data.p1)
data.p1$date<-as.Date(rownames(data.p1))
colnames(data.p1)<-c('sum', 'date')
#create graph
library(ggplot2)
ggplot(steps.sum, aes(x=date,y=sum)) + geom_histogram(stat='identity')
#calculate the mean and median
mean(steps.sum$sum)
median(steps.sum$sum)
#count the number of NAs
sum(is.na(data$steps))
#calculate the mean of each interval
data.p2<-data[!is.na(data$steps),c(1,3)]
data.p2<-tapply(data.p2$steps, data.p2$interval, mean)
data.p2<-as.data.frame(data.p2)
data.p2$date<-as.integer(rownames(data.p2))
colnames(data.p2)<-c('mean','interval')
#seperate data into NA rows and non-NA rows
data.NA<-data[is.na(data$steps),]
data.nonNA<-data[!is.na(data$steps),]
#replace steps with in NA data with the mean of each interval
data.NA<-merge(x=data.NA, y=data.p2, by='interval', all.x=TRUE)
data.NA<-data.NA[,c(1,4,3)]
colnames(data.NA)<-c('interval','steps','date')
#recombine to make a whole dataset
data.p3<-rbind(data.nonNA,data.NA)
#calculate sums of each day
library(ggplot2)
ggplot(data.p3, aes(x=date,y=steps)) + geom_histogram(stat='sum')
setwd("~/datasciencecoursera/RepData_PeerAssessment1")
#read data and process date to date class
data<-read.csv('activity.csv')
data$date<-as.Date(data$date, format="%Y-%m-%d")
#create a clean without null
data.p1<-data[!is.na(data$steps),c(1,2)]
#calculate the sum of each day
data.p1<-tapply(data.p1$steps, data.p1$date, sum)
data.p1<-as.data.frame(data.p1)
data.p1$date<-as.Date(rownames(data.p1))
colnames(data.p1)<-c('sum', 'date')
#create graph
library(ggplot2)
ggplot(steps.sum, aes(x=date,y=sum)) + geom_histogram(stat='identity')
#calculate the mean and median
mean(steps.sum$sum)
median(steps.sum$sum)
#count the number of NAs
sum(is.na(data$steps))
#calculate the mean of each interval
data.p2<-data[!is.na(data$steps),c(1,3)]
data.p2<-tapply(data.p2$steps, data.p2$interval, mean)
data.p2<-as.data.frame(data.p2)
data.p2$date<-as.integer(rownames(data.p2))
colnames(data.p2)<-c('mean','interval')
#seperate data into NA rows and non-NA rows
data.NA<-data[is.na(data$steps),]
data.nonNA<-data[!is.na(data$steps),]
#replace steps with in NA data with the mean of each interval
data.NA<-merge(x=data.NA, y=data.p2, by='interval', all.x=TRUE)
data.NA<-data.NA[,c(1,4,3)]
colnames(data.NA)<-c('interval','steps','date')
#recombine to make a whole dataset
data.comb<-rbind(data.nonNA,data.NA)
#calculate sums of each day
data.p3<-tapply(data.comb$steps, data.p1$comb, sum)
data.p3<-as.data.frame(data.p3)
data.p3$date<-as.Date(rownames(data.p3))
colnames(data.p3)<-c('sum', 'date')
#create histogram
library(ggplot2)
ggplot(data.p3, aes(x=date,y=sum)) + geom_histogram(stat='identity')
#calculate sums of each day
data.p3<-tapply(data.comb$steps, data.comb, sum)
data.p3<-as.data.frame(data.p3)
data.p3$date<-as.Date(rownames(data.p3))
colnames(data.p3)<-c('sum', 'date')
#create histogram
library(ggplot2)
ggplot(data.p3, aes(x=date,y=sum)) + geom_histogram(stat='identity')
data.p3<-tapply(data.comb$steps, data.comb, sum)
data.p3<-as.data.frame(data.p3)
data.p3$date<-as.Date(rownames(data.p3))
View(data.p3)
data.p3<-tapply(data.comb$steps, data.comb$date, sum)
data.p3<-as.data.frame(data.p3)
data.p3$date<-as.Date(rownames(data.p3))
colnames(data.p3)<-c('sum', 'date')
library(ggplot2)
ggplot(data.p3, aes(x=date,y=sum)) + geom_histogram(stat='identity')
setwd("~/datasciencecoursera/RepData_PeerAssessment1")
#read data and process date to date class
data<-read.csv('activity.csv')
data$date<-as.Date(data$date, format="%Y-%m-%d")
#create a clean without null
data.p1<-data[!is.na(data$steps),c(1,2)]
#calculate the sum of each day
data.p1<-tapply(data.p1$steps, data.p1$date, sum)
data.p1<-as.data.frame(data.p1)
data.p1$date<-as.Date(rownames(data.p1))
colnames(data.p1)<-c('sum', 'date')
#create graph
library(ggplot2)
ggplot(steps.sum, aes(x=date,y=sum)) + geom_histogram(stat='identity')
#calculate the mean and median
mean(data.p1$sum)
median(data.p1$sum)
#count the number of NAs
sum(is.na(data$steps))
#calculate the mean of each interval
data.p2<-data[!is.na(data$steps),c(1,3)]
data.p2<-tapply(data.p2$steps, data.p2$interval, mean)
data.p2<-as.data.frame(data.p2)
data.p2$date<-as.integer(rownames(data.p2))
colnames(data.p2)<-c('mean','interval')
#seperate data into NA rows and non-NA rows
data.NA<-data[is.na(data$steps),]
data.nonNA<-data[!is.na(data$steps),]
#replace steps with in NA data with the mean of each interval
data.NA<-merge(x=data.NA, y=data.p2, by='interval', all.x=TRUE)
data.NA<-data.NA[,c(1,4,3)]
colnames(data.NA)<-c('interval','steps','date')
#recombine to make a whole dataset
data.comb<-rbind(data.nonNA,data.NA)
#calculate sums of each day
data.p3<-tapply(data.comb$steps, data.comb$date, sum)
data.p3<-as.data.frame(data.p3)
data.p3$date<-as.Date(rownames(data.p3))
colnames(data.p3)<-c('sum', 'date')
#create histogram
library(ggplot2)
ggplot(data.p3, aes(x=date,y=sum)) + geom_histogram(stat='identity')
#calculate the mean and median
mean(data.p3$sum)
median(data.p3$sum)
#create graph
library(ggplot2)
ggplot(data.p1, aes(x=date,y=sum)) + geom_histogram(stat='identity')
#calculate the mean and median
mean(data.p1$sum)
median(data.p1$sum)
setwd("~/datasciencecoursera/RepData_PeerAssessment1")
#read data and process date to date class
data<-read.csv('activity.csv')
data$date<-as.Date(data$date, format="%Y-%m-%d")
#create a clean without null
data.p1<-data[!is.na(data$steps),c(1,2)]
#calculate the sum of each day
data.p1<-tapply(data.p1$steps, data.p1$date, sum)
data.p1<-as.data.frame(data.p1)
data.p1$date<-as.Date(rownames(data.p1))
colnames(data.p1)<-c('sum', 'date')
#create graph
library(ggplot2)
ggplot(data.p1, aes(x=date,y=sum)) + geom_histogram(stat='identity')
#calculate the mean and median
mean(data.p1$sum)
median(data.p1$sum)
#count the number of NAs
sum(is.na(data$steps))
#calculate the mean of each interval
data.p2<-data[!is.na(data$steps),c(1,3)]
data.p2<-tapply(data.p2$steps, data.p2$interval, mean)
data.p2<-as.data.frame(data.p2)
data.p2$date<-as.integer(rownames(data.p2))
colnames(data.p2)<-c('mean','interval')
#seperate data into NA rows and non-NA rows
data.NA<-data[is.na(data$steps),]
data.nonNA<-data[!is.na(data$steps),]
#replace steps with in NA data with the mean of each interval
data.NA<-merge(x=data.NA, y=data.p2, by='interval', all.x=TRUE)
data.NA<-data.NA[,c(1,4,3)]
colnames(data.NA)<-c('interval','steps','date')
#recombine to make a whole dataset
data.comb<-rbind(data.nonNA,data.NA)
#calculate sums of each day
data.p3<-tapply(data.comb$steps, data.comb$date, sum)
data.p3<-as.data.frame(data.p3)
data.p3$date<-as.Date(rownames(data.p3))
colnames(data.p3)<-c('sum', 'date')
#create histogram
library(ggplot2)
ggplot(data.p3, aes(x=date,y=sum)) + geom_histogram(stat='identity')
#calculate the mean and median
mean(data.p3$sum)
median(data.p3$sum)
View(data.p3)
#calculate the mean of each interval
data.p2<-data[!is.na(data$steps),c(1,3)]
data.p2<-tapply(data.p2$steps, data.p2$interval, mean)
data.p2<-as.data.frame(data.p2)
data.p2$date<-as.integer(rownames(data.p2))
colnames(data.p2)<-c('mean','interval')
#create graph
library(ggplot2)
ggplot(data.p2, aes(x=interval,y=mean)) + geom_line() + geom_point()
?weekdays
weekdays(data.comb$date)
data.comb$day<-weekdays(data.comb$date)
data.comb$day<-if(weekdays(data.comb$date) %in% c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')) 'Weekday'
else 'Weekend'
data.comb$day<-if(weekdays(data.comb$date) %in% c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')) 'Weekday' else 'Weekend'
View(data.comb)
if(weekdays(data.comb$date) %in% c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')) 'Weekday' else 'Weekend'
data.comb$day<-if(weekdays(data.comb$date) %in%
>c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')) 'Weekday'
>else 'Weekend'
{data.comb$day<-if(weekdays(data.comb$date) %in%
c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')) 'Weekday'
else 'Weekend'
}
data.comb$day<-{ifelse(weekdays(data.comb$date) %in%
c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')),
'Weekday',
'Weekend'
}
data.comb$day<-{ifelse(weekdays(data.comb$date) %in%
c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'),
'Weekday',
'Weekend')
}
{ifelse(weekdays(data.comb$date) %in%
c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')),
'Weekday',
'Weekend'
}
{ifelse(weekdays(data.comb$date) %in%
c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'),
'Weekday',
'Weekend')
}
data.comb$day<-ifelse(weekdays(data.comb$date) %in%
c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'),
'Weekday',
'Weekend')
#add in a column for weekday and weekend flag
data.comb$day<-ifelse(weekdays(data.comb$date) %in%
c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'),
'Weekday',
'Weekend')
?tapply
data.comb.day<-data.comb[day='Weekday',]
data.comb.day<-data.comb$day='Weekday'
data.comb.day<-subset(data.com,day=='Weekend')
data.comb.day<-subset(data.comb,day=='Weekend')
data.p5.day<-as.dataframe(tapply(data.comb.day, data.comb.day$interval, mean))
data.p5$date<-as.integer(rownames(data.p5))
colnames(data.p5)<-c('mean','interval')
data.p5.day<-as.data.frame(tapply(data.comb.day, data.comb.day$interval, mean))
data.p5$date<-as.integer(rownames(data.p5))
colnames(data.p5)<-c('mean','interval')
data.p5.day<-as.data.frame(tapply(data.comb.day, data.comb.day$interval, mean))
data.p5.day$date<-as.integer(rownames(data.p5.day))
colnames(data.p5.day)<-c('mean','interval')
data.p5.day<-tapply(data.comb.day, data.comb.day$interval, mean)
data.p5.day<-as.data.frame(tapply(data.comb.day$steps, data.comb.day$interval, mean))
data.p5.day<-as.data.frame(tapply(data.comb.day$steps, data.comb.day$interval, mean))
data.p5.day$date<-as.integer(rownames(data.p5.day))
colnames(data.p5.day)<-c('mean','interval')
data.p5.end<-as.data.frame(tapply(data.comb.end$steps, data.comb.end$interval, mean))
library(ggplot2)
ggplot(data.p5, aes(x=interval,y=mean)) + facet_wrap(~day, nrow = 2) + geom_line() + geom_point()
#split into weekday and weekend
data.comb.day<-subset(data.comb,day=='Weekday')
data.comb.end<-subset(data.comb,day=='Weekend')
#calculate the mean of each interval
data.p5.day<-as.data.frame(tapply(data.comb.day$steps, data.comb.day$interval, mean))
data.p5.day$date<-as.integer(rownames(data.p5.day))
colnames(data.p5.day)<-c('mean','interval')
data.p5.day$day<-Weekday
data.p5.end<-as.data.frame(tapply(data.comb.end$steps, data.comb.end$interval, mean))
data.p5.end$date<-as.integer(rownames(data.p5.end))
colnames(data.p5.end)<-c('mean','interval')
data.p5.end$day<-Weekend
#recombine to make a full dataset
data.p5<-rbind(data.p5.day, data.p5.end)
#create graph
library(ggplot2)
ggplot(data.p5, aes(x=interval,y=mean)) + facet_wrap(~day, nrow = 2) + geom_line() + geom_point()
ggplot(data.p5, aes(x=interval,y=mean)) + facet_wrap(day~., nrow = 2) + geom_line() + geom_point()
ggplot(data.p5, aes(x=interval,y=mean)) + facet_grid(day~.) + geom_line() + geom_point()
#split into weekday and weekend
data.comb.day<-subset(data.comb,day=='Weekday')
data.comb.end<-subset(data.comb,day=='Weekend')
#calculate the mean of each interval
data.p5.day<-as.data.frame(tapply(data.comb.day$steps, data.comb.day$interval, mean))
data.p5.day$date<-as.integer(rownames(data.p5.day))
colnames(data.p5.day)<-c('mean','interval')
data.p5.day$day<-'Weekday'
data.p5.end<-as.data.frame(tapply(data.comb.end$steps, data.comb.end$interval, mean))
data.p5.end$date<-as.integer(rownames(data.p5.end))
colnames(data.p5.end)<-c('mean','interval')
data.p5.end$day<-'Weekend'
#recombine to make a full dataset
data.p5<-rbind(data.p5.day, data.p5.end)
#create graph
library(ggplot2)
ggplot(data.p5, aes(x=interval,y=mean)) + facet_grid(day ~ .) + geom_line() + geom_point()
Using this I then constructed a histogram of the data.
